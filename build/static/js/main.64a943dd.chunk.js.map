{"version":3,"sources":["component/flooranalysis/FromToTable.module.css","component/sendanalysis/Sendfab.module.css","component/simulation/Reservation.module.css","component/header/Header.js","component/common/TabList.js","component/flooranalysis/FromToTable.js","api/flooranalysis/FromToAnalysisApi.js","component/flooranalysis/FromToAnalysis.js","component/sendanalysis/NetworkTable.js","component/sendanalysis/SendfabNetwork.js","component/sendanalysis/InterfaceChart.js","component/sendanalysis/Sendfab.js","component/sendanalysis/ContStep.js","component/sendanalysis/LotSize.js","component/sendanalysis/ValidateLotTrace.js","component/masterdata/Arrange.js","component/masterdata/Eqp.js","component/masterdata/Step.js","component/masterdata/WaferInputs.js","component/EmptyPage.js","component/Home.js","component/simulation/ScenarioDescription.js","component/simulation/Reservation.js","component/simulation/CurrentRunningTable.js","component/simulation/ReservedTable.js","component/simulation/SimBoard.js","component/simulation/MySimulation.js","component/Main.js","App.js","index.js"],"names":["module","exports","Header","className","to","EachTab","tabName","link","selectTab","changeTabMethod","useState","onClick","TabList","styleName","tabList","links","changeStateMethod","Object","keys","tabNames","tabState","setTabState","changeTabState","newTabState","map","eachTab","initSelectTabs","index","onChange","pagination","filters","sorter","extra","console","log","FromToTable","title","header","rows","downloadUrl","columns","setColumns","useEffect","newColumn","colNames","i","dataIndex","a","b","sortDirections","text","record","props","style","background","children","length","makeColumns","width","moduleCss","title_container","table_title","download_container","href","download","src","alt","dataSource","size","FromToAnalysisApi","site","year","month","newDisplayLines","axios","get","then","res","data","fromToAnalysisApi","makeSearchKey","isExistInObject","obj","key","prototype","hasOwnProperty","call","FromToAnalysis","defaultSite","undefined","curSite","setCurSite","defaultYear","thisYear","Date","getFullYear","getCurYear","curYear","setCurYear","defaultMonth","now","thisMonth","String","getMonth","getCurMonth","curMonth","setCurMonth","displaySites","curSites","H1","P","getDisplaySites","linkOfSites","displayYears","oldestYear","curYears","push","getDisplayYears","linkOfYears","displayMonths","oldestMonth","curMonths","getDisplayMonths","linkOfMonths","displayLineCache","setDisplayLineCache","requestFromToData","readFromToTable","response","result","newLines","updateDisplayLines","filter_wrapper","target","value","fontSize","displayTarget","line","section_container","displayFromToTableComponent","onFilter","interface","indexOf","fromLine","fromFloor","toLine","toFloor","orgLineId","count","NetworkTable","pageSize","defaultPageSize","MyResponsiveChord","matrix","margin","top","right","bottom","left","valueFormat","padAngle","innerRadiusRatio","innerRadiusOffset","arcOpacity","arcBorderWidth","arcBorderColor","from","modifiers","ribbonOpacity","ribbonBorderWidth","ribbonBorderColor","enableLabel","label","labelOffset","labelRotation","labelTextColor","colors","scheme","isInteractive","arcHoverOpacity","arcHoverOthersOpacity","ribbonHoverOpacity","ribbonHoverOthersOpacity","animate","motionStiffness","motionDamping","theme","textColor","SendfabNetwork","curLine","curMatrix","LocalData","lineId","country","burger","burgerColor","sandwich","sandwichColor","kebab","kebabColor","fries","friesColor","donut","donutColor","MyResponsiveBar","indexBy","padding","valueScale","type","indexScale","round","defs","id","color","stagger","rotation","lineWidth","spacing","fill","match","borderColor","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","role","ariaLabel","barAriaLabel","e","formattedValue","indexValue","InterfaceChart","interfaceId","height","Sendfab","defaultLine","setCurLine","displayLines","curLines","getDisplayLines","linkOfLines","section_layout","ContStep","apiTest","setApiTest","catch","error","LotSize","ValidateLotTrace","Arrange","Eqp","Step","WaferInputs","EmptyPage","Home","ScenarioDescription","scenarioFile","bordered","Item","span","status","Reservation","simulator","setSimulator","uploadFile","setUploadFile","scenarioUploadButtonProps","name","action","headers","authorization","event","file","prev","message","success","originFileObj","reader","FileReader","onload","readAsText","isPossibleReservation","setIsPossibleReservation","reservationButtonProps","disabled","reservation_sectio_wrapper","simulator_button_container","Group","options","optionType","buttonStyle","icon","UploadOutlined","columns_cur_running","render","user","tag","toUpperCase","CurrentRunningTable","columns_cur_reserved","ReservedTable","data_cur_running","no","scenario","startDate","runningTime","currentRep","requestRep","server","data_cur_reserved","reservationDate","SimBoard","data_cur_history","endDate","terminateReason","columns_cur_history","reason","HistoryTable","MySimulation","Main","exact","path","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64a943dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-table-thead\":\"FromToTable_ant-table-thead__G7RXE\",\"filter_wrapper\":\"FromToTable_filter_wrapper__3AwRQ\",\"title_container\":\"FromToTable_title_container__JFGW7\",\"table_title\":\"FromToTable_table_title__2ZG8t\",\"download_container\":\"FromToTable_download_container__1O87a\",\"section_container\":\"FromToTable_section_container__38cAg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_wrapper\":\"Sendfab_filter_wrapper__1MuyN\",\"section_layout\":\"Sendfab_section_layout__3NJd2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reservation_sectio_wrapper\":\"Reservation_reservation_sectio_wrapper__1T-00\",\"simulator_button_container\":\"Reservation_simulator_button_container__1asHz\"};","import React from 'react';\nimport './Header.css';\nimport {Link} from 'react-router-dom';\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"wrap_header\">\n        <h1 className=\"doc-title\">\n          <Link className=\"home_img\" to=\"/\">\n            amhs sim portal\n          </Link>\n        </h1>\n        <nav className=\"header-nav\">\n          <ul className=\"main_menu\">\n            <li className=\"main_menu_li\">\n              <a className=\"main_menu_a\">Transfer Analysis</a>\n              <ul className=\"sub_menu\">\n                <li>\n                  <Link to=\"/flooranalysis/FromToAnalysis\">From-To Analysis</Link>\n                </li>\n                <li>\n                  <Link to=\"/sendanalysis/contStep\">비정형 Send</Link>\n                </li>\n              </ul>\n            </li>\n            {/* <li className=\"main_menu_li\">\n              <a className=\"main_menu_a\">SendFAB Analysis</a>\n              <ul className=\"sub_menu\">\n                <li>\n                  <Link to=\"/sendanalysis/sendNetwork\">층/동간 반송량 Trend</Link>\n                </li>\n                <li>\n                  <Link to=\"/sendanalysis/contStep\">연속 Step</Link>\n                </li>\n                <li>\n                  <Link to=\"/sendanalysis/lotSize\">Lot Size</Link>\n                </li>\n                <li>\n                  <Link to=\"/sendanalysis/validateTrs\">Lot Trace 검증</Link>\n                </li>\n              </ul>\n            </li>\n            <li className=\"main_menu_li\">\n              <a className=\"main_menu_a\">Master data Analysis</a>\n              <ul className=\"sub_menu\">\n                <li>\n                  <Link to=\"/masterdata/WaferInputs\">투입량</Link>\n                </li>\n                <li>\n                  <Link to=\"/masterdata/Eqp\">EQP</Link>\n                </li>\n                <li>\n                  <Link to=\"/masterdata/Step\">STEP</Link>\n                </li>\n                <li>\n                  <Link to=\"/masterdata/Arrange\">Arrange</Link>\n                </li>\n              </ul>\n            </li> */}\n            <li className=\"main_menu_li\">\n              <a className=\"main_menu_a\">Simulation</a>\n              <ul className=\"sub_menu\">\n                <li>\n                  <Link to=\"/simulation/SimBoard\">Sim Board</Link>\n                </li>\n                <li>\n                  <Link to=\"/simulation/MySimulation\">My Simulation</Link>\n                </li>\n                <li>\n                  <Link to=\"/simulation/Reservation\">Reservation</Link>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport './TabList.css';\nimport TestComponent from '../../TestComponent';\n\nconst EachTab = ({tabName, link, selectTab, changeTabMethod}) => {\n  const [isClicked, setIsClicked] = useState(false);\n\n  return (\n    <li key={tabName} onClick={() => changeTabMethod(tabName)}>\n      <Link className={`${selectTab ? 'on' : 'tab_list'}`} to={link}>\n        {tabName}\n      </Link>\n    </li>\n  );\n};\n\nconst TabList = ({styleName, tabList, links, changeStateMethod}) => {\n  const [tabNames, seTabNames] = useState(Object.keys(tabList));\n\n  const initSelectTabs = () => {\n    const selectTab = {};\n    tabNames.map(eachTab => {\n      selectTab[eachTab] = false;\n    });\n\n    return selectTab;\n  };\n\n  const [tabState, setTabState] = useState(tabList);\n\n  const changeTabState = tabName => {\n    const newTabState = initSelectTabs();\n    newTabState[tabName] = !newTabState[tabName];\n    setTabState(newTabState);\n    changeStateMethod(tabName);\n  };\n  return (\n    <ul className={styleName}>\n      {tabNames.map((eachTab, index) => {\n        return (\n          <EachTab\n            key={index}\n            tabName={eachTab}\n            link={links[eachTab]}\n            selectTab={tabState[eachTab]}\n            changeTabMethod={changeTabState}\n          ></EachTab>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default TabList;\n","import React, {useState, useEffect} from 'react';\nimport 'antd/dist/antd.css';\nimport {Table} from 'antd';\nimport moduleCss from './FromToTable.module.css';\n\nconst makeColumns = colNames => {\n  const columns = [];\n\n  for (let i = 0; i < colNames.length; i++) {\n    columns[i] = {\n      title: colNames[i],\n      dataIndex: colNames[i],\n      sorter: (a, b) => {\n        if (i === 0) {\n          return `a.${colNames[i]}.length - b.${colNames[i]}.length`;\n        }\n        return `a.${colNames[i]} - b.${colNames[i]}`;\n      },\n      sortDirections: ['descend'],\n    };\n\n    if (i === 0) {\n      columns[i]['render'] = function (text, record) {\n        return {\n          props: {\n            style: {background: '#EBEBEB'},\n          },\n          children: <div>{text}</div>,\n        };\n      };\n    }\n  }\n  return columns;\n};\n\nfunction onChange(pagination, filters, sorter, extra) {\n  console.log('params', pagination, filters, sorter, extra);\n}\n\nconst FromToTable = ({title, header, rows, downloadUrl}) => {\n  const [pageSize, setPageSize] = useState(3);\n  const [columns, setColumns] = useState([]);\n\n  useEffect(() => {\n    const newColumn = makeColumns(header);\n    setColumns(newColumn);\n  }, [header]);\n\n  return (\n    <article style={{width: 800}}>\n      <div className={moduleCss.title_container}>\n        <h4 className={moduleCss.table_title}>{title}</h4>\n        <div className={moduleCss.download_container}>\n          <a href={downloadUrl} download>\n            <img src=\"/component/common/excel_icon.jpeg\" alt=\"excel_icon.jpeg\" />\n          </a>\n        </div>\n      </div>\n      <Table columns={columns} dataSource={rows} onChange={onChange} size=\"middle\" />\n    </article>\n  );\n};\n\nexport default FromToTable;\n","import axios from 'axios';\n\nclass FromToAnalysisApi {\n  async readFromToTable(site, year, month) {\n    let newDisplayLines = {};\n    await axios.get(`http://localhost:3001/fromto?site=${site}&year=${year}&month=${month}`).then(res => {\n      newDisplayLines = res.data[0];\n    });\n\n    return newDisplayLines;\n  }\n}\n\nexport default FromToAnalysisApi;\n","import React, {useState, useEffect} from 'react';\nimport {useForm} from 'react-hook-form';\nimport axios from 'axios';\nimport TabList from '../common/TabList';\nimport '../common/TabList.css';\nimport '../common/Title.css';\nimport moduleCss from './FromToTable.module.css';\nimport FromToTable from './FromToTable';\nimport FromToAnalysisApi from '../../api/flooranalysis/FromToAnalysisApi';\nimport {PropTypes} from 'prop-types';\n\nconst fromToAnalysisApi = new FromToAnalysisApi();\n\nconst getDisplaySites = defaultSite => {\n  const curSites = {\n    H1: false,\n    'H2,3': false,\n    P: false,\n  };\n  defaultSite = defaultSite === undefined ? 'H1' : defaultSite;\n  curSites[defaultSite] = true;\n  return curSites;\n};\n\nconst getDisplayYears = oldestYear => {\n  const now = new Date();\n  const thisYear = now.getFullYear();\n  oldestYear = oldestYear === undefined ? thisYear - 1 : oldestYear;\n\n  const curYears = [];\n  for (let index = thisYear; index >= oldestYear; index--) {\n    curYears.push(`${index}`);\n  }\n  return curYears;\n};\n\nconst getDisplayMonths = (defaultMonth, oldestMonth) => {\n  const now = new Date();\n  const thisMonth = String(now.getMonth() + 1); // 월은 0~11월이므로 +1\n\n  const curMonths = {};\n  for (let index = 1; index <= 12; index++) {\n    curMonths[String(index)] = false;\n  }\n  defaultMonth = defaultMonth === undefined ? thisMonth : defaultMonth;\n  curMonths[defaultMonth] = true;\n  return curMonths;\n};\n\nconst getCurSite = defaultSite => {\n  return defaultSite === undefined ? 'H1' : defaultSite;\n};\n\nconst getCurYear = defaultYear => {\n  const now = new Date();\n  const thisYear = now.getFullYear();\n  return defaultYear === undefined ? thisYear : defaultYear;\n};\n\nconst getCurMonth = defaultMonth => {\n  const now = new Date();\n  const thisMonth = String(now.getMonth() + 1);\n  return defaultMonth === undefined ? thisMonth : defaultMonth;\n};\n\nconst makeSearchKey = (site, year, month) => {\n  return site + '_' + year + '_' + month;\n};\n\nconst isExistInObject = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nconst FromToAnalysis = () => {\n  const [curSite, setCurSite] = useState(getCurSite('H1'));\n  const [curYear, setCurYear] = useState(getCurYear());\n  const [curMonth, setCurMonth] = useState(getCurMonth());\n\n  const displaySites = getDisplaySites(curSite);\n  const linkOfSites = {...displaySites};\n  for (let key in linkOfSites) {\n    linkOfSites[key] = '/flooranalysis/FromToAnalysis';\n  }\n\n  const displayYears = getDisplayYears();\n  const linkOfYears = {...displayYears};\n  for (let key in linkOfYears) {\n    linkOfYears[key] = '/flooranalysis/FromToAnalysis';\n  }\n\n  const displayMonths = getDisplayMonths(curMonth);\n  const linkOfMonths = {...displayMonths};\n  for (let key in linkOfMonths) {\n    linkOfMonths[key] = '/flooranalysis/FromToAnalysis';\n  }\n\n  const [displayLineCache, setDisplayLineCache] = useState({});\n\n  const requestFromToData = async () => {\n    if (\n      displayLineCache === undefined ||\n      isExistInObject(displayLineCache, makeSearchKey(curSite, curYear, curMonth))\n    ) {\n      console.log('aleady requested');\n      return;\n    }\n\n    const res = await fromToAnalysisApi.readFromToTable(curSite, curYear, curMonth);\n    return res;\n  };\n\n  const updateDisplayLines = response => {\n    if (isExistInObject(displayLineCache, makeSearchKey(curSite, curYear, curMonth))) {\n      console.log('find in cache');\n    } else {\n      response.then(result => {\n        const newLines = {...displayLineCache};\n        newLines[makeSearchKey(curSite, curYear, curMonth)] = result;\n        setDisplayLineCache(newLines);\n      });\n    }\n  };\n\n  const displayFromToTableComponent = () => {\n    if (displayLineCache[makeSearchKey(curSite, curYear, curMonth)] === undefined) {\n      return <div style={{fontSize: 20}}>No data to display</div>;\n    }\n\n    const displayTarget = displayLineCache[makeSearchKey(curSite, curYear, curMonth)].data.line;\n    console.log(displayTarget);\n    return Object.keys(displayTarget).map((line, index) => {\n      return (\n        <section key={index} className={moduleCss.section_container}>\n          <FromToTable\n            title={line}\n            header={displayTarget[line].header}\n            rows={displayTarget[line].rows}\n            downloadUrl={`${curSite}_${line}_${curYear}_${curMonth}`}\n          />\n        </section>\n      );\n    });\n  };\n\n  useEffect(() => {\n    console.log('selected -> ' + `site: ${curSite}, year: ${curYear}, month: ${curMonth}`);\n\n    const response = requestFromToData();\n    updateDisplayLines(response);\n  }, [curSite, curYear, curMonth]);\n  const onSubmit = data => {\n    setCurYear(data.target.value);\n  };\n\n  return (\n    <div>\n      <h3 className=\"sub_title\">\n        <img src=\"/component/sendanalysis/from-to.png\" alt=\"from-to.png\" />\n        From-To Analysis\n      </h3>\n      <div className={moduleCss.filter_wrapper}>\n        <div>\n          <TabList styleName={'tab_list'} tabList={displaySites} links={linkOfSites} changeStateMethod={setCurSite} />\n        </div>\n        <div>\n          <form className=\"year_list_wrapper\">\n            <select className=\"year_list\" onChange={onSubmit} value={curYear}>\n              {displayYears.map((year, index) => {\n                return (\n                  <option key={index} value={year}>\n                    {year}\n                  </option>\n                );\n              })}\n            </select>\n          </form>\n          <TabList\n            styleName={'tab_list month_list'}\n            tabList={displayMonths}\n            links={linkOfMonths}\n            changeStateMethod={setCurMonth}\n          />\n        </div>\n      </div>\n      <div>{displayFromToTableComponent()}</div>\n    </div>\n  );\n};\n\nexport default FromToAnalysis;\n","import React, {useState} from 'react';\nimport {Table} from 'antd';\nimport '../common/Table.css';\nimport 'antd/dist/antd.css';\nimport './NetworkTable.css';\nimport LocalData from '../../db/Sendfab.json';\n\nconst columns = [\n  {\n    title: 'Interface',\n    dataIndex: 'interface',\n    filters: [\n      {\n        text: '12(7F) - 13(3F)',\n        value: '12(7F) - 13(3F)',\n      },\n    ],\n    // specify the condition of filtering result\n    // here is that finding the name started with `value`\n    onFilter: (value, record) => record.interface.indexOf(value) === 0,\n    sorter: (a, b) => a.interface.length - b.interface.length,\n    sortDirections: ['descend'],\n  },\n  {\n    title: 'From Line',\n    dataIndex: 'fromLine',\n    filters: [\n      {\n        text: '12',\n        value: '12',\n      },\n      {\n        text: '13',\n        value: '13',\n      },\n    ],\n    // specify the condition of filtering result\n    // here is that finding the name started with `value`\n    onFilter: (value, record) => record.fromLine.indexOf(value) === 0,\n    sorter: (a, b) => a.fromLine.length - b.fromLine.length,\n    sortDirections: ['descend'],\n  },\n  {\n    title: 'From Floor',\n    dataIndex: 'fromFloor',\n    filters: [\n      {\n        text: '3',\n        value: '3',\n      },\n      {\n        text: '7',\n        value: '7',\n      },\n    ],\n    // specify the condition of filtering result\n    // here is that finding the name started with `value`\n    onFilter: (value, record) => record.fromFloor.indexOf(value) === 0,\n    sorter: (a, b) => a.fromFloor.length - b.fromFloor.length,\n    sortDirections: ['descend'],\n  },\n  {\n    title: 'To Line',\n    dataIndex: 'toLine',\n    filters: [\n      {\n        text: '12',\n        value: '12',\n      },\n      {\n        text: '13',\n        value: '13',\n      },\n    ],\n    // specify the condition of filtering result\n    // here is that finding the name started with `value`\n    onFilter: (value, record) => record.toLine.indexOf(value) === 0,\n    sorter: (a, b) => a.toLine.length - b.toLine.length,\n    sortDirections: ['descend'],\n  },\n  {\n    title: 'To Floor',\n    dataIndex: 'toFloor',\n    filters: [\n      {\n        text: '3',\n        value: '3',\n      },\n      {\n        text: '7',\n        value: '7',\n      },\n    ],\n    // specify the condition of filtering result\n    // here is that finding the name started with `value`\n    onFilter: (value, record) => record.toFloor.indexOf(value) === 0,\n    sorter: (a, b) => a.toFloor.length - b.toFloor.length,\n    sortDirections: ['descend'],\n  },\n  {\n    title: 'Org Line ID',\n    dataIndex: 'orgLineId',\n    filters: [\n      {\n        text: 'KFBC',\n        value: 'KFBC',\n      },\n      {\n        text: 'KFBE',\n        value: 'KFBE',\n      },\n    ],\n    // specify the condition of filtering result\n    // here is that finding the name started with `value`\n    onFilter: (value, record) => record.orgLineId.indexOf(value) === 0,\n    sorter: (a, b) => a.orgLineId.length - b.orgLineId.length,\n    sortDirections: ['descend'],\n  },\n  {\n    title: 'Count',\n    dataIndex: 'count',\n    // specify the condition of filtering result\n    // here is that finding the name started with `value`\n    sorter: (a, b) => a.count.length - b.count.length,\n    sortDirections: ['descend'],\n  },\n];\n\nconst pagination = {\n  defaultPageSize: 5,\n};\n\nfunction onChange(pagination, filters, sorter, extra) {\n  console.log('params', pagination, filters, sorter, extra);\n}\n\nconst NetworkTable = ({data}) => {\n  const [pageSize, setPageSize] = useState(10);\n\n  return (\n    <article className=\"sendfab_table_layout\">\n      <h4>Sendfab Table</h4>\n      <Table\n        columns={columns}\n        dataSource={data}\n        pagination={{defaultPageSize: pageSize}}\n        onChange={onChange}\n        size=\"small\"\n      />\n    </article>\n  );\n};\n\nexport default NetworkTable;\n","import React, {useState, useEffect} from 'react';\nimport '../common/Title.css';\nimport './SendfabNetwork.css';\nimport {ResponsiveChord} from '@nivo/chord';\nimport LocalData from '../../db/SendfabNetwork.json';\n\nconst matrix = [\n  [0, 1948, 577, 419, 315],\n  [761, 0, 384, 712, 124],\n  [474, 14, 0, 51, 492],\n  [1523, 62, 194, 0, 48],\n  [848, 347, 302, 251, 0],\n];\n\nconst matrix2 = [\n  [0, 148, 77, 41, 315],\n  [761, 0, 84, 712, 124],\n  [474, 14, 0, 51, 92],\n  [123, 62, 194, 0, 48],\n  [88, 37, 302, 251, 0],\n];\n\nconst MyResponsiveChord = ({keys, matrix}) => {\n  const theme = {\n    background: '#ffffff',\n    textColor: '#333333',\n    fontSize: 14,\n  };\n\n  return (\n    <ResponsiveChord\n      matrix={matrix}\n      keys={keys}\n      margin={{top: 60, right: 60, bottom: 60, left: 60}}\n      valueFormat=\".2f\"\n      padAngle={0.25}\n      innerRadiusRatio={0.96}\n      innerRadiusOffset={0.02}\n      arcOpacity={1}\n      arcBorderWidth={1}\n      arcBorderColor={{from: 'color', modifiers: [['darker', 0.4]]}}\n      ribbonOpacity={0.5}\n      ribbonBorderWidth={1}\n      ribbonBorderColor={{from: 'color', modifiers: [['darker', 0.4]]}}\n      enableLabel={true}\n      label=\"id\"\n      labelOffset={12}\n      labelRotation={-90}\n      labelTextColor={{from: 'color', modifiers: [['darker', 1]]}}\n      colors={{scheme: 'nivo'}}\n      isInteractive={true}\n      arcHoverOpacity={1}\n      arcHoverOthersOpacity={0}\n      ribbonHoverOpacity={1}\n      ribbonHoverOthersOpacity={0.12}\n      animate={true}\n      motionStiffness={90}\n      motionDamping={7}\n      theme={theme}\n    />\n  );\n};\n\nconst SendfabNetwork = ({curLine, curYear, curMonth}) => {\n  const curMatrix = [];\n  const keys = [];\n\n  const response = LocalData; // server에 요청 후 json 타입으로 받음\n  response['keys'].map(lineId => {\n    keys.push(lineId);\n    curMatrix.push(response[lineId]);\n  });\n\n  return (\n    <article className=\"network_article_layout\">\n      <h4>Sendfab Network</h4>\n      <MyResponsiveChord keys={response.keys} matrix={curMatrix} />\n    </article>\n  );\n};\n\nexport default SendfabNetwork;\n","import React from 'react';\nimport {ResponsiveBar} from '@nivo/bar';\n\nconst data = [\n  {\n    country: 'AD',\n    'hot dog': 188,\n    'hot dogColor': 'hsl(355, 70%, 50%)',\n    burger: 125,\n    burgerColor: 'hsl(102, 70%, 50%)',\n    sandwich: 118,\n    sandwichColor: 'hsl(253, 70%, 50%)',\n    kebab: 141,\n    kebabColor: 'hsl(37, 70%, 50%)',\n    fries: 58,\n    friesColor: 'hsl(217, 70%, 50%)',\n    donut: 2,\n    donutColor: 'hsl(224, 70%, 50%)',\n  },\n  {\n    country: 'AE',\n    'hot dog': 104,\n    'hot dogColor': 'hsl(100, 70%, 50%)',\n    burger: 102,\n    burgerColor: 'hsl(225, 70%, 50%)',\n    sandwich: 105,\n    sandwichColor: 'hsl(1, 70%, 50%)',\n    kebab: 163,\n    kebabColor: 'hsl(42, 70%, 50%)',\n    fries: 62,\n    friesColor: 'hsl(7, 70%, 50%)',\n    donut: 107,\n    donutColor: 'hsl(350, 70%, 50%)',\n  },\n  {\n    country: 'AF',\n    'hot dog': 95,\n    'hot dogColor': 'hsl(86, 70%, 50%)',\n    burger: 77,\n    burgerColor: 'hsl(199, 70%, 50%)',\n    sandwich: 194,\n    sandwichColor: 'hsl(89, 70%, 50%)',\n    kebab: 117,\n    kebabColor: 'hsl(305, 70%, 50%)',\n    fries: 57,\n    friesColor: 'hsl(349, 70%, 50%)',\n    donut: 102,\n    donutColor: 'hsl(151, 70%, 50%)',\n  },\n  {\n    country: 'AG',\n    'hot dog': 154,\n    'hot dogColor': 'hsl(22, 70%, 50%)',\n    burger: 85,\n    burgerColor: 'hsl(152, 70%, 50%)',\n    sandwich: 172,\n    sandwichColor: 'hsl(122, 70%, 50%)',\n    kebab: 101,\n    kebabColor: 'hsl(7, 70%, 50%)',\n    fries: 22,\n    friesColor: 'hsl(295, 70%, 50%)',\n    donut: 118,\n    donutColor: 'hsl(2, 70%, 50%)',\n  },\n  {\n    country: 'AI',\n    'hot dog': 116,\n    'hot dogColor': 'hsl(146, 70%, 50%)',\n    burger: 55,\n    burgerColor: 'hsl(93, 70%, 50%)',\n    sandwich: 161,\n    sandwichColor: 'hsl(125, 70%, 50%)',\n    kebab: 167,\n    kebabColor: 'hsl(37, 70%, 50%)',\n    fries: 137,\n    friesColor: 'hsl(291, 70%, 50%)',\n    donut: 0,\n    donutColor: 'hsl(310, 70%, 50%)',\n  },\n  {\n    country: 'AL',\n    'hot dog': 174,\n    'hot dogColor': 'hsl(199, 70%, 50%)',\n    burger: 194,\n    burgerColor: 'hsl(183, 70%, 50%)',\n    sandwich: 28,\n    sandwichColor: 'hsl(45, 70%, 50%)',\n    kebab: 161,\n    kebabColor: 'hsl(72, 70%, 50%)',\n    fries: 31,\n    friesColor: 'hsl(50, 70%, 50%)',\n    donut: 13,\n    donutColor: 'hsl(38, 70%, 50%)',\n  },\n  {\n    country: 'AM',\n    'hot dog': 164,\n    'hot dogColor': 'hsl(21, 70%, 50%)',\n    burger: 103,\n    burgerColor: 'hsl(39, 70%, 50%)',\n    sandwich: 59,\n    sandwichColor: 'hsl(210, 70%, 50%)',\n    kebab: 184,\n    kebabColor: 'hsl(95, 70%, 50%)',\n    fries: 138,\n    friesColor: 'hsl(63, 70%, 50%)',\n    donut: 154,\n    donutColor: 'hsl(81, 70%, 50%)',\n  },\n];\n\nconst MyResponsiveBar = ({data}) => {\n  return (\n    <ResponsiveBar\n      data={data}\n      keys={['hot dog', 'burger', 'sandwich', 'kebab', 'fries', 'donut']}\n      indexBy=\"country\"\n      margin={{top: 50, right: 130, bottom: 50, left: 60}}\n      padding={0.3}\n      valueScale={{type: 'linear'}}\n      indexScale={{type: 'band', round: true}}\n      colors={{scheme: 'nivo'}}\n      defs={[\n        {\n          id: 'dots',\n          type: 'patternDots',\n          background: 'inherit',\n          color: '#38bcb2',\n          size: 4,\n          padding: 1,\n          stagger: true,\n        },\n        {\n          id: 'lines',\n          type: 'patternLines',\n          background: 'inherit',\n          color: '#eed312',\n          rotation: -45,\n          lineWidth: 6,\n          spacing: 10,\n        },\n      ]}\n      fill={[\n        {\n          match: {\n            id: 'fries',\n          },\n          id: 'dots',\n        },\n        {\n          match: {\n            id: 'sandwich',\n          },\n          id: 'lines',\n        },\n      ]}\n      borderColor={{from: 'color', modifiers: [['darker', 1.6]]}}\n      axisTop={null}\n      axisRight={null}\n      axisBottom={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'country',\n        legendPosition: 'middle',\n        legendOffset: 32,\n      }}\n      axisLeft={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'food',\n        legendPosition: 'middle',\n        legendOffset: -40,\n      }}\n      labelSkipWidth={12}\n      labelSkipHeight={12}\n      labelTextColor={{from: 'color', modifiers: [['darker', 1.6]]}}\n      legends={[\n        {\n          dataFrom: 'keys',\n          anchor: 'bottom-right',\n          direction: 'column',\n          justify: false,\n          translateX: 120,\n          translateY: 0,\n          itemsSpacing: 2,\n          itemWidth: 100,\n          itemHeight: 20,\n          itemDirection: 'left-to-right',\n          itemOpacity: 0.85,\n          symbolSize: 20,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemOpacity: 1,\n              },\n            },\n          ],\n        },\n      ]}\n      role=\"application\"\n      ariaLabel=\"Nivo bar chart demo\"\n      barAriaLabel={function (e) {\n        return e.id + ': ' + e.formattedValue + ' in country: ' + e.indexValue;\n      }}\n    />\n  );\n};\n\nconst InterfaceChart = ({interfaceId}) => {\n  interfaceId = '12-13~';\n\n  return (\n    <article>\n      <h4>{interfaceId}</h4>\n      <div style={{height: 400, width: 700}}>\n        <MyResponsiveBar data={data} />\n      </div>\n    </article>\n  );\n};\n\nexport default InterfaceChart;\n","import React, {useState, useEffect} from 'react';\nimport {useForm} from 'react-hook-form';\nimport TabList from '../common/TabList';\nimport '../common/TabList.css';\nimport '../common/Title.css';\nimport moduleCss from './Sendfab.module.css';\nimport NetworkTable from './NetworkTable';\nimport SendfabNetwork from './SendfabNetwork';\nimport InterfaceChart from './InterfaceChart';\nimport LocalData from '../../db/Sendfab.json';\n\nconst getDisplayLines = defaultLine => {\n  const curLines = {\n    H1: false,\n    'H2/3': false,\n    P: false,\n  };\n  defaultLine = defaultLine === undefined ? 'H1' : defaultLine;\n  curLines[defaultLine] = true;\n  return curLines;\n};\n\nconst getDisplayYears = oldestYear => {\n  const now = new Date();\n  const thisYear = now.getFullYear();\n  oldestYear = oldestYear === undefined ? thisYear - 1 : oldestYear;\n\n  const curYears = [];\n  for (let index = thisYear; index >= oldestYear; index--) {\n    curYears.push(`${index}`);\n  }\n  return curYears;\n};\n\nconst getDisplayMonths = (defaultMonth, oldestMonth) => {\n  const now = new Date();\n  const thisMonth = String(now.getMonth() + 1); // 월은 0~11월이므로 +1\n\n  const curMonths = {};\n  for (let index = 1; index <= 12; index++) {\n    curMonths[String(index)] = false;\n  }\n  defaultMonth = defaultMonth === undefined ? thisMonth : defaultMonth;\n  curMonths[defaultMonth] = true;\n  return curMonths;\n};\n\nconst getCurLine = defaultLine => {\n  return defaultLine === undefined ? 'H1' : defaultLine;\n};\n\nconst getCurYear = defaultYear => {\n  const now = new Date();\n  const thisYear = now.getFullYear();\n  return defaultYear === undefined ? thisYear : defaultYear;\n};\n\nconst getCurMonth = defaultMonth => {\n  const now = new Date();\n  const thisMonth = String(now.getMonth() + 1);\n  return defaultMonth === undefined ? thisMonth : defaultMonth;\n};\n\nconst Sendfab = () => {\n  const [curLine, setCurLine] = useState(getCurLine('H1'));\n  const [curYear, setCurYear] = useState(getCurYear());\n  const [curMonth, setCurMonth] = useState(getCurMonth());\n\n  const displayLines = getDisplayLines(curLine);\n  const linkOfLines = {...displayLines};\n  for (let key in linkOfLines) {\n    linkOfLines[key] = '/sendanalysis/sendNetwork';\n  }\n\n  const displayYears = getDisplayYears();\n  const linkOfYears = {...displayYears};\n  for (let key in linkOfYears) {\n    linkOfYears[key] = '/sendanalysis/sendNetwork';\n  }\n\n  const displayMonths = getDisplayMonths(curMonth);\n  const linkOfMonths = {...displayMonths};\n  for (let key in linkOfMonths) {\n    linkOfMonths[key] = '/sendanalysis/sendNetwork';\n  }\n\n  useEffect(() => {\n    console.log(curLine);\n    console.log(curYear);\n    console.log(curMonth);\n  }, [curLine, curYear, curMonth]);\n  const onSubmit = data => {\n    setCurYear(data.target.value);\n  };\n\n  const response = LocalData;\n\n  return (\n    <div>\n      <h3 className=\"sub_title\">\n        <img src=\"/component/sendanalysis/network.png\"></img>\n        층/동간 반송량 Trend\n      </h3>\n      <div className={moduleCss.filter_wrapper}>\n        <div>\n          <TabList styleName={'tab_list'} tabList={displayLines} links={linkOfLines} changeStateMethod={setCurLine} />\n        </div>\n        <div>\n          <form className=\"year_list_wrapper\">\n            <select className=\"year_list\" onChange={onSubmit} value={curYear}>\n              {displayYears.map((year, index) => {\n                return (\n                  <option key={index} value={year}>\n                    {year}\n                  </option>\n                );\n              })}\n            </select>\n          </form>\n          <TabList\n            styleName={'tab_list {moduleCss.month_list}'}\n            tabList={displayMonths}\n            links={linkOfMonths}\n            changeStateMethod={setCurMonth}\n          />\n        </div>\n      </div>\n      <div>\n        <section className={moduleCss.section_layout}>\n          <SendfabNetwork curLine={curLine} />\n          <NetworkTable data={response.NetworkTable} />\n        </section>\n      </div>\n      <div>\n        <section className={moduleCss.section_layout}>\n          <InterfaceChart />\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Sendfab;\n","import React, {useState} from 'react';\nimport axios from 'axios';\nimport '../common/Title.css';\n\nconst ContStep = () => {\n  const [apiTest, setApiTest] = useState('before request');\n\n  const getTest1 = () => {\n    axios\n      .get('http://localhost:80/sendanalysis/contStep/getTest')\n      .then(function (response) {\n        console.log(response.data);\n        setApiTest(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // 항상 실행\n      });\n  };\n\n  return (\n    <div>\n      <h3 className=\"sub_title\">\n        <img src=\"/component/sendanalysis/process.png\"></img>\n        <em>연속 Step</em>\n      </h3>\n      <h1>{apiTest}</h1>\n      <button style={{fontSize: 15}} onClick={getTest1}>\n        request to server button1\n      </button>\n    </div>\n  );\n};\n\nexport default ContStep;\n","import React from 'react';\nimport '../common/Title.css';\n\nconst LotSize = () => {\n  return (\n    <div>\n      <h3 className=\"sub_title\">\n        <img src=\"/component/sendanalysis/wafers.png\"></img>\n        <em>Lot Size</em>\n      </h3>\n    </div>\n  );\n};\n\nexport default LotSize;\n","import React from 'react';\nimport '../common/Title.css';\n\nconst ValidateLotTrace = () => {\n  return (\n    <div>\n      <h3 className=\"sub_title\">\n        <img src=\"/component/sendanalysis/check.png\"></img>\n        <em>Lot Trace 반송량 검증</em>\n      </h3>\n    </div>\n  );\n};\n\nexport default ValidateLotTrace;\n","import React from 'react';\nimport '../common/Title.css';\n\nconst Arrange = () => {\n  return (\n    <div>\n      <h3 className=\"sub_title\">\n        <img src=\"/component/masterdata/arrange.png\"></img>\n        <em>Arrange</em>\n      </h3>\n    </div>\n  );\n};\n\nexport default Arrange;\n","import React from 'react';\nimport '../common/Title.css';\n\nconst Eqp = () => {\n  return (\n    <div>\n      <h3 className=\"sub_title\">\n        <img src=\"/component/masterdata/eqp.png\"></img>\n        <em>EQP</em>\n      </h3>\n    </div>\n  );\n};\n\nexport default Eqp;\n","import React from 'react';\nimport '../common/Title.css';\nconst Step = () => {\n  return (\n    <div>\n      <h3 className=\"sub_title\">\n        <img src=\"/component/masterdata/steps.png\"></img>\n        <em>Step</em>\n      </h3>\n    </div>\n  );\n};\n\nexport default Step;\n","import React from 'react';\nimport '../common/Title.css';\n\nconst WaferInputs = () => {\n  return (\n    <div>\n      <h3 className=\"sub_title\">\n        <img src=\"/component/masterdata/waferinputs.png\"></img>\n        <em>투입량</em>\n      </h3>\n    </div>\n  );\n};\n\nexport default WaferInputs;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst EmptyPage = () => {\n  return (\n    <div>\n      <h3>잘못된 접근입니다.</h3>\n      <Link to=\"/\">돌아가기</Link>\n    </div>\n  );\n};\n\nexport default EmptyPage;\n","import React, {useState} from 'react';\nimport axios from 'axios';\nimport DataTable from './common/DataTable';\n\nconst Home = () => {\n  const [apiTest, setApiTest] = useState('before request');\n\n  const getTest = () => {\n    axios\n      .get('http://localhost:80/sendanalysis/contStep')\n      .then(function (response) {\n        console.log(response.data);\n        setApiTest(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // 항상 실행\n      });\n  };\n\n  return (\n    <div>\n      <h3 className=\"sub_title\">Home</h3>\n      <h1>{apiTest}</h1>\n      <button style={{fontSize: 15}} onClick={getTest}>\n        request to server\n      </button>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport {Descriptions, Badge, Empty} from 'antd';\nimport {UploadOutlined} from '@ant-design/icons';\n\nconst ScenarioDescription = ({scenarioFile}) => {\n  if (scenarioFile !== undefined) {\n    return (\n      <Descriptions title=\"\" bordered>\n        <Descriptions.Item label=\"Product\">Cloud Database</Descriptions.Item>\n        <Descriptions.Item label=\"Billing Mode\">Prepaid</Descriptions.Item>\n        <Descriptions.Item label=\"Automatic Renewal\">YES</Descriptions.Item>\n        <Descriptions.Item label=\"Order time\">2018-04-24 18:00:00</Descriptions.Item>\n        <Descriptions.Item label=\"Usage Time\" span={2}>\n          2019-04-24 18:00:00\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Status\" span={3}>\n          <Badge status=\"processing\" text=\"Running\" />\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Negotiated Amount\">$80.00</Descriptions.Item>\n        <Descriptions.Item label=\"Discount\">$20.00</Descriptions.Item>\n        <Descriptions.Item label=\"Official Receipts\">$60.00</Descriptions.Item>\n        <Descriptions.Item label=\"Config Info\">\n          Data disk type: MongoDB\n          <br />\n          Database version: 3.4\n          <br />\n          Package: dds.mongo.mid\n          <br />\n          Storage space: 10 GB\n          <br />\n          Replication factor: 3\n          <br />\n          Region: East China 1<br />\n        </Descriptions.Item>\n      </Descriptions>\n    );\n  } else {\n    console.log(scenarioFile);\n    return <Empty />;\n  }\n};\n\nexport default ScenarioDescription;\n","import React, {useState, useEffect} from 'react';\nimport {useForm} from 'react-hook-form';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport moduleCss from './Reservation.module.css';\nimport {Upload, message, Button, Radio, Empty} from 'antd';\nimport {UploadOutlined} from '@ant-design/icons';\nimport ScenarioDescription from './ScenarioDescription';\n\nconst Reservation = () => {\n  const [simulator, setSimulator] = useState();\n  const isSimulatorSelected = () => {\n    return simulator !== undefined;\n  };\n  const optionsWithDisabled = [\n    {label: 'AMHS Sim', value: 'amhsSim'},\n    {label: 'SeeFlow', value: 'seeflow'},\n    {label: 'Remote Sim', value: 'remoteSim', disabled: true},\n  ];\n\n  const handleSimulatorChange = event => {\n    console.log('Selected simulator: ' + event.target.value);\n    setSimulator(prev => event.target.value);\n  };\n\n  const [uploadFile, setUploadFile] = useState();\n  const isFileUploaded = () => {\n    return uploadFile !== undefined;\n  };\n  const scenarioUploadButtonProps = {\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n      authorization: 'authorization-text',\n    },\n    onChange(event) {\n      if (event.file.status !== 'uploading') {\n        setUploadFile(prev => undefined);\n        // console.log(event.file, event.fileList);\n      }\n      if (event.file.status === 'done') {\n        message.success(`${event.file.name} file uploaded successfully`);\n\n        const file = event.file.originFileObj;\n        console.log('typeOf: ' + typeof file);\n        setUploadFile(file);\n        const reader = new FileReader();\n        reader.onload = function () {\n          // console.log(reader.result);\n        };\n        reader.readAsText(file);\n      } else if (event.file.status === 'error') {\n        message.error(`${event.file.name} file upload failed.`);\n      }\n    },\n  };\n\n  const [isPossibleReservation, setIsPossibleReservation] = useState(false);\n  const reservationButtonProps = {\n    type: 'primary',\n    disabled: !isPossibleReservation,\n    onClick() {\n      console.log('Reservation Clicked');\n    },\n  };\n\n  useEffect(() => {\n    if (isSimulatorSelected() && isFileUploaded()) {\n      setIsPossibleReservation(prev => true);\n    }\n  }, [simulator, uploadFile]);\n\n  return (\n    <section style={{fontSize: 20}} className={moduleCss.reservation_sectio_wrapper}>\n      <h3 className=\"sub_title\">\n        <img src=\"/component/simulation/reservation.png\"></img>\n        <em>Reservation</em>\n      </h3>\n      <article className={moduleCss.simulator_button_container}>\n        <h4>Simulator</h4>\n        <Radio.Group\n          options={optionsWithDisabled}\n          onChange={handleSimulatorChange}\n          value={simulator}\n          optionType=\"button\"\n          buttonStyle=\"solid\"\n        />\n      </article>\n      <article className={moduleCss.simulator_button_container}>\n        <h4>Scenario upload</h4>\n        <Upload {...scenarioUploadButtonProps}>\n          <Button icon={<UploadOutlined />}>Click to Upload</Button>\n        </Upload>\n      </article>\n      <article>\n        <h4>Scenario description</h4>\n        <ScenarioDescription scenarioFile={uploadFile} />\n      </article>\n      <div>\n        <Button {...reservationButtonProps}>Reservation</Button>\n      </div>\n    </section>\n  );\n};\n\nexport default Reservation;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport {Table, Tag, Space} from 'antd';\nimport Reservation from './Reservation';\n\nconst columns_cur_running = [\n  {\n    title: 'No',\n    dataIndex: 'no',\n    key: 'no',\n  },\n  {\n    title: 'Scenario',\n    dataIndex: 'scenario',\n    key: 'scenario',\n  },\n  {\n    title: 'Simulator',\n    dataIndex: 'simulator',\n    key: 'simulator',\n  },\n  {\n    title: 'User',\n    key: 'user',\n    dataIndex: 'user',\n    render: user => (\n      <>\n        {user.map(tag => {\n          let color = tag.length > 5 ? 'geekblue' : 'orange';\n          if (tag === 'User2') {\n            color = 'geekblue';\n          }\n          return (\n            <Tag color={color} key={tag}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </>\n    ),\n  },\n  {\n    title: 'Start Date',\n    dataIndex: 'startDate',\n    key: 'startDate',\n  },\n  {\n    title: 'Running Time',\n    dataIndex: 'runningTime',\n    key: 'runningTime',\n  },\n  {\n    title: 'Current Rep',\n    dataIndex: 'currentRep',\n    key: 'currentRep',\n  },\n  {\n    title: 'Request Rep',\n    dataIndex: 'requestRep',\n    key: 'requestRep',\n  },\n  {\n    title: 'Server',\n    dataIndex: 'server',\n    key: 'server',\n  },\n  {\n    title: 'Terminate',\n    key: 'terminate',\n    render: () => (\n      <Space size=\"middle\">\n        <a>Terminate</a>\n      </Space>\n    ),\n  },\n];\n\nconst CurrentRunningTable = ({data}) => {\n  return (\n    <div>\n      <h4 style={{fontSize: 25}}>Current running</h4>\n      <Table columns={columns_cur_running} dataSource={data} />\n    </div>\n  );\n};\n\nexport default CurrentRunningTable;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport {Table, Tag, Space} from 'antd';\nimport Reservation from './Reservation';\n\nconst columns_cur_reserved = [\n  {\n    title: 'No',\n    dataIndex: 'no',\n    key: 'no',\n  },\n  {\n    title: 'Scenario',\n    dataIndex: 'scenario',\n    key: 'scenario',\n  },\n  {\n    title: 'Simulator',\n    dataIndex: 'simulator',\n    key: 'simulator',\n  },\n  {\n    title: 'User',\n    dataIndex: 'user',\n    key: 'user',\n    render: user => (\n      <>\n        {user.map(user => {\n          let color = user.length > 5 ? 'geekblue' : 'orange';\n          if (user === 'User2') {\n            color = 'geekblue';\n          }\n          return (\n            <Tag color={color} key={user}>\n              {user.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </>\n    ),\n  },\n  {\n    title: 'Reservation Date',\n    dataIndex: 'reservationDate',\n    key: 'reservationDate',\n  },\n  {\n    title: 'Delete',\n    dataIndex: 'delete',\n    key: 'delete',\n    render: () => (\n      <Space size=\"middle\">\n        <a>Delete</a>\n      </Space>\n    ),\n  },\n];\n\nconst ReservedTable = ({data}) => {\n  return (\n    <div>\n      <h4 style={{fontSize: 25}}>Reserved</h4>\n      <Table columns={columns_cur_reserved} dataSource={data} />\n    </div>\n  );\n};\n\nexport default ReservedTable;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport {Table, Tag, Space} from 'antd';\nimport Reservation from './Reservation';\nimport CurrentRunningTable from './CurrentRunningTable';\nimport ReservedTable from './ReservedTable';\n\nconst data_cur_running = [\n  {\n    key: '1',\n    no: 1,\n    scenario: 'Scenario1',\n    simulator: 'Simulator A',\n    user: ['User1'],\n    startDate: '2021-12-20 11:32:54',\n    runningTime: 42,\n    currentRep: 3,\n    requestRep: 4,\n    server: '#1',\n  },\n  {\n    key: '2',\n    no: 2,\n    scenario: 'Scenario2',\n    simulator: 'Simulator B',\n    user: ['User2'],\n    startDate: '2021-12-20 11:45:27',\n    runningTime: 57,\n    currentRep: 1,\n    requestRep: 2,\n    server: '#2',\n  },\n  {\n    key: '3',\n    no: 3,\n    scenario: 'Scenario3',\n    simulator: 'Simulator C',\n    user: ['User3'],\n    startDate: '2021-12-20 15:23:42',\n    runningTime: 75,\n    currentRep: 3,\n    requestRep: 5,\n    server: '#1',\n  },\n];\n\nconst data_cur_reserved = [\n  {\n    key: '1',\n    no: 1,\n    scenario: 'Scenario1',\n    simulator: 'Simulator A',\n    user: ['User1'],\n    reservationDate: '2021-12-20 11:32:54',\n  },\n  {\n    key: '2',\n    no: 2,\n    scenario: 'Scenario2',\n    simulator: 'Simulator B',\n    user: ['User2'],\n    reservationDate: '2021-12-20 11:45:27',\n  },\n  {\n    key: '3',\n    no: 3,\n    scenario: 'Scenario3',\n    simulator: 'Simulator C',\n    user: ['User3'],\n    reservationDate: '2021-12-20 15:23:42',\n  },\n];\n\nconst SimBoard = () => {\n  return (\n    <div>\n      <h3 className=\"sub_title\">\n        <img src=\"/component/simulation/simboard.png\"></img>\n        <em>Sim Board</em>\n        <section>\n          <CurrentRunningTable data={data_cur_running} />\n        </section>\n        <section>\n          <ReservedTable data={data_cur_reserved} />\n        </section>\n      </h3>\n    </div>\n  );\n};\n\nexport default SimBoard;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport {Table, Tag, Space} from 'antd';\nimport CurrentRunningTable from './CurrentRunningTable';\nimport ReservedTable from './ReservedTable';\n\nconst data_cur_running = [\n  {\n    key: '1',\n    no: 1,\n    scenario: 'Scenario2',\n    simulator: 'Simulator B',\n    user: ['User2'],\n    startDate: '2021-12-20 11:45:27',\n    runningTime: 57,\n    currentRep: 1,\n    requestRep: 2,\n    server: '#2',\n  },\n];\n\nconst data_cur_reserved = [\n  {\n    key: '1',\n    no: 1,\n    scenario: 'Scenario5',\n    simulator: 'Simulator B',\n    user: ['User2'],\n    reservationDate: '2021-12-20 11:45:27',\n  },\n];\n\nconst data_cur_history = [\n  {\n    key: '1',\n    no: 1,\n    scenario: 'History Scenario1',\n    simulator: 'Simulator A',\n    user: ['User2'],\n    startDate: '2021-12-13 11:45:27',\n    endDate: '2021-12-13 14:52:59',\n    terminateReason: ['NORMAL'],\n  },\n  {\n    key: '2',\n    no: 2,\n    scenario: 'History Scenario2',\n    simulator: 'Simulator C',\n    user: ['User2'],\n    startDate: '2021-12-14 15:32:57',\n    endDate: '2021-12-14 16:21:42',\n    terminateReason: ['ABNORMAL'],\n  },\n];\n\nconst columns_cur_history = [\n  {\n    title: 'No',\n    dataIndex: 'no',\n    key: 'no',\n  },\n  {\n    title: 'Scenario',\n    dataIndex: 'scenario',\n    key: 'scenario',\n  },\n  {\n    title: 'Simulator',\n    dataIndex: 'simulator',\n    key: 'simulator',\n  },\n\n  {\n    title: 'Start Date',\n    dataIndex: 'startDate',\n    key: 'startDate',\n  },\n  {\n    title: 'End Date',\n    dataIndex: 'endDate',\n    key: 'endDate',\n  },\n  {\n    title: 'Terminate Reason',\n    dataIndex: 'terminateReason',\n    key: 'terminateReason',\n    render: terminateReason => (\n      <>\n        {terminateReason.map(reason => {\n          let color = 'green';\n          if (reason === 'ABNORMAL') {\n            color = 'red';\n          }\n          return (\n            <Tag color={color} key={reason}>\n              {reason.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </>\n    ),\n  },\n  {\n    title: 'Result',\n    dataIndex: 'result',\n    key: 'result',\n    render: () => (\n      <Space size=\"middle\">\n        <a>Download</a>\n      </Space>\n    ),\n  },\n  {\n    title: 'Delete',\n    dataIndex: 'delete',\n    key: 'delete',\n    render: () => (\n      <Space size=\"middle\">\n        <a>Delete</a>\n      </Space>\n    ),\n  },\n];\n\nconst HistoryTable = ({data}) => {\n  return (\n    <div>\n      <h4 style={{fontSize: 25}}>History</h4>\n      <Table columns={columns_cur_history} dataSource={data} />\n    </div>\n  );\n};\n\nconst MySimulation = () => {\n  return (\n    <div>\n      <h3 className=\"sub_title\">\n        <img src=\"/component/simulation/mysim.png\"></img>\n        <em>My Simulation</em>\n      </h3>\n      <section>\n        <CurrentRunningTable data={data_cur_running} />\n      </section>\n      <section>\n        <ReservedTable data={data_cur_reserved} />\n      </section>\n      <section>\n        <HistoryTable data={data_cur_history} />\n      </section>\n    </div>\n  );\n};\n\nexport default MySimulation;\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport FromToAnalysis from './flooranalysis/FromToAnalysis';\nimport Sendfab from './sendanalysis/Sendfab';\nimport ContStep from './sendanalysis/ContStep';\nimport LotSize from './sendanalysis/LotSize';\nimport ValidateLotTrace from './sendanalysis/ValidateLotTrace';\nimport Arrange from './masterdata/Arrange';\nimport Eqp from './masterdata/Eqp';\nimport Step from './masterdata/Step';\nimport WaferInputs from './masterdata/WaferInputs';\nimport EmptyPage from './EmptyPage';\nimport Home from './Home';\nimport './common/Title.css';\nimport SimBoard from './simulation/SimBoard';\nimport MySimulation from './simulation/MySimulation';\nimport Reservation from './simulation/Reservation';\n\nconst Main = () => {\n  return (\n    <main className=\"main\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/flooranalysis/FromToAnalysis\">\n          <FromToAnalysis />\n        </Route>\n        <Route path=\"/sendanalysis/sendNetwork\">\n          <Sendfab />\n        </Route>\n        <Route path=\"/sendanalysis/contStep\">\n          <ContStep />\n        </Route>\n        <Route path=\"/sendanalysis/lotSize\">\n          <LotSize />\n        </Route>\n        <Route path=\"/sendanalysis/validateTrs\">\n          <ValidateLotTrace />\n        </Route>\n        <Route path=\"/masterdata/WaferInputs\">\n          <WaferInputs />\n        </Route>\n        <Route path=\"/masterdata/Eqp\">\n          <Eqp />\n        </Route>\n        <Route path=\"/masterdata/Step\">\n          <Step />\n        </Route>\n        <Route path=\"/masterdata/Arrange\">\n          <Arrange />\n        </Route>\n        <Route path=\"/simulation/SimBoard\">\n          <SimBoard />\n        </Route>\n        <Route path=\"/simulation/MySimulation\">\n          <MySimulation />\n        </Route>\n        <Route path=\"/simulation/Reservation\">\n          <Reservation />\n        </Route>\n        <Route>\n          <EmptyPage />\n        </Route>\n      </Switch>\n    </main>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport './App.css';\nimport Header from './component/header/Header';\nimport Main from './component/Main';\nimport SendNetwork from './component/SendNetwork';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header></Header>\n        <Main></Main>\n        {/* <SendNetwork /> */}\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('wrap'),\n);\n"],"sourceRoot":""}